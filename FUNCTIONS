1. Структура метода 
2. Типы и виды методов
3. ЦИКЛ foreach ДЛЯ РАБОТЫ С МАССИВОМ. МЕТОД ВОЗВРАЩАЮЩИЙ НЕСКОЛЬКО ЧИСЕ В ВИДЕ МАССИВА


Функция возвращает значение - возвращаемый тип (ОБЯЗАТЕЛЬНО команда return)
    ВозвращаемйТипДанных(FEX int / double / string) ИмяМетода (арггумент1, аргумент2)

// f(x) = x2 + 1

// double f(double x)
// {
//     result = x*x + 1;
//     returne = result;
// }

НЕВОЗВРАЩАЕМЫЙ ТИП ФУНКЦИИ (void)

VOID не используется оператор returne

// void FillArray(int[] collections)                              // Fill == заполнить
// {
//     int Length = collections.Length;
//     index = 0;
//     while (index < Length)
//     {
//         collection[index] = new Random.Next(1, 10);

//         index++;
        
//     }
// }

НИЧЕГО НЕ ПРИНИМАЮТ, НО ВОЗВРАЩАЮТ 
FEX new Random().Next(min,max) - генерирует случайные числа от min до max-1

Вид 1 Ничего не возвращают и ничего не ПРИНИМАЮТ

// void writenameavtor()  в скобках нет аргументов т.к ничего не принимает
// {
//     Console.WriteLine("Автор: МВЗ");
// }

// Вызвать метод:

// writenameavtor();   ВАЖНО!! СКОБКИ ОБЯЗАТЕЛЬНО!

// ВИД 2.
// НИЧЕГО НЕ ВОЗВРАЩАЮТ, НО МОГУТ ПРИНИМАТЬ АРГУМЕНТЫ

// void Metod2(string msg)
// {
//     Console.WriteLine(msg);
// }

ВЫЗОВ

// Metod2("Текст сообщения");

Именованные аргументы

// void Metod21(string msg, int count)
// {
//     int i = 0
//     while(i < count)
//     {
//         Console.WriteLine(msg);
//         i++                          //инкремент (уменьшение - тэккремент)
//     }

// }

ВЫЗОВ
// Metod21("Tekst", 5);

// Как вариант:
// Metod21(msg: "Tekst", count: 5);     // Но текст все равно в кавычках, разделитель запятая. При использовании именнованных аргументов необязательно писать по порядку

// Metod21(count: 5, msg: "Tekst");

ВИД 3.
ЧТО*ТО ВОЗВРАЩАЮТ, НО НИЧЕГО НЕ ПРИНИМАЮТ

// int Metod3()  Поскольку возвращает, надо указать тип данных, котрые мы ждем (int)
// {
//     return DateTime.Now.Year;                                  return ОБЯЗАТЕЛЬН т.к. возвращаеииый тип
// }
ВЫЗОВ
// int year = Metod3();
// Console.WriteLine(year);


ВИД 4.
ЧТО-ТО ПРИНИМАЮТ И ЧТО-ТО ВОЗВРАЩАЮТ

// string Metod4(int count, string Text)           char = обуглить
// {
//     i = 0;
//     string result = String.Empty
//     while(i < count)
//     {
//         result = result + Text;
//         i++
//     }
//     return result;
// }

ВЫЗОВ
// syring res = Metod4(10, qwer);
// Console.WriteLine(res)


ЦИКЛ foreach ДЛЯ РАБОТЫ С МАССИВОМ. МЕТОД ВОЗВРАЩАЮЩИЙ НЕСКОЛЬКО ЧИСЕ В ВИДЕ МАССИВА

// int[] FindSum(int[] arr)
// {
// int positiveSum = 0;
// int negativeSum = 0;
// int[] ress = new int[2];              // через создание нового массива
// foreach(int el in arr)               //el - переменная, можно назвать как угодно  - это элемент цикла, число в нашем случае
// {
//     if (el > 0)
//     {
//         positiveSum = positiveSum + el; /// positiveSum += el
//     }
//     else
//     {
//         negativeSum += el;
//     }

// }
// ress[0] = positiveSum;       //формируем массив В return НЕЛЬЗЯ ЗАПИСАТЬ НЕСКОЛЬКО ЧИСЕЛ
// ress[1] = negativeSum;
// return ress;                  // Вернуть можно только масив из нескольких чисел

// }
// int[] array = GetArray(12, -9, 9);
// PrintArray(array);
// int[] ress = FindSum(array);
// Console.WriteLine();
// PrintArray(ress);
// Console.WriteLine();
// Console.WriteLine($"Сумма положительных чисел равна {ress[0]} Cумма отрицательных чисел равна {ress[1]}");