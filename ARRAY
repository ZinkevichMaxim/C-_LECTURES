1. Структура МАССИВА
2. Меняем значение в массиве
3. ПОИСК ЗАДАННОГО ЧИСЛА В МАССИВЕ ЛЮБОЙ ДЛИНЫ
4. ЗАПОЛНЕНИЕ МАССИВА С ПОМОЩЬЮ ГЕНЕРАТОРА СЛУЧАЙНЫХ ЧИСЕЛ
5. СТРОКА, ТЕКСТ = тоже массив
6. СОРТИРОВКА МАССИВА
7. ЦИКЛ foreach ДЛЯ РАБОТЫ С МАССИВОМ. МЕТОД ВОЗВРАЩАЮЩИЙ НЕСКОЛЬКО ЧИСЕ В ВИДЕ МАССИВА


ТипДанных[] имя = {Знаячение1, Значение2, Значение3}  // имя с маленькой буквы

// int[] array = {9, 28, 1, 32, 1990}

// ТИПЫ МАССИВОВ:

// int[] array = {0,0,0,0,0}
// int[] array = new int[5]
// int[] array = new int[]{0,0,0,0,0,}
// int[] array = new int[5]{1,0,2,0,3}

// //           i=0   1  2  3 4  5  6  7  8
// int[] array = {11,21,31,41,15,61,17,18,19}


МЕНЯЕМ ЗНАЧЕНИЕ В МАССИВЕ
// //  i
// int[0] = 12 //новое значение i[0]

// Обращаемся к значению в массиве:
// Console.Write(array[0])
// Ответ - 12

// Массив в итоге выглядит;
// int[] array = {12,21,31,41,15,61,17,18,19}

ПОИСК ЗАДАННОГО ЧИСЛА В МАССИВЕ ЛЮБОЙ ДЛИНЫ

// int[] array = {1, 12, 31, 4, 15, 16, 17, 18}

// int n = array.Length                        // Точка обязательна
// int find = 4                                // Ищем значение 4
// int index = 0                               // Начинаем с индекса (i) = 0

// while (index < n)
// {
//     if (array[index] == find)
//     {
//         Console.Write(index);
//     }
//     else
//     {
//     index++;                                    // index = index + 1
//     }                           
// }

ЗАПОЛНЕНИЕ МАССИВА С ПОМОЩЬЮ ГЕНЕРАТОРА СЛУЧАЙНЫХ ЧИСЕЛ

// void FillArray(int[] collections)                              //Fill == заполнить
// {
//     int Length = collections.Length;
//     index = 0;
//     while (index < Length)
//     {
//         collection[index] = new Random.Next(1, 10);

//         index++;
        
//     }
// }

// void PrintArrey(int[] col)
// {
//     int count = col.Length;
//     int position = 0;
//     while (position < count)
//     {
//         Console.WriteLine(col[position]);
//         position++;
//     }

// }



// int[] array = new int[10];         // Определили массив
// void FillArray(array);             // Заполнили массив
// void PrintArrey(array);            // Распечатали массив

СТРОКА, ТЕКСТ = тоже массив

// string s = qwerty
//            012345

// string[2] = e 

// int Length = s.Length

СОРТИРОВКА МАССИВА
// 6 8 3 2 1 4 5 7
// Взяли первый элемент за max (в нашем примере 6) и ищем min (единичка - 1) и меняем их местами
// 1 8 3 2 6 4 5 7
// Дальше взяли второй элемент за max  и ищем min и потом меняем местами
// 1 2 3 8 6 4 5 7    // 8 на 2

// int[] arr = {1, 5, 4 3, 2, 6, 7, 1, 1}

// void PrintArrey(int[] array)
// {
//     int count = array.Length;
//     for(int i = 0; i < count; i++)
//     {
//         Console.Write($"{array[i]} ")
//     }
//     Console.WriteLine();

// }

// void SelectionSort(int[] array)
// {
//     for(int i = 0; i < array.lenght -1; i++)      -1!!
//     {
//         int minPosition = i;
//         for(int j = i+1; j < array.lenght; j++);
//         {
//             if(array[j] < array[minPosition])
//             {
//                 minPosition = j;
//             }
//         }


//         int temporary = array[i];
//         array[i] = array[minPosition];
//         minPosition = temporary
//     }
// }

ЦИКЛ foreach ДЛЯ РАБОТЫ С МАССИВОМ. МЕТОД ВОЗВРАЩАЮЩИЙ НЕСКОЛЬКО ЧИСЕ В ВИДЕ МАССИВА

// int[] FindSum(int[] arr)
// {
// int positiveSum = 0;
// int negativeSum = 0;
// int[] ress = new int[2];              // через создание нового массива
// foreach(int el in arr)               //el - переменная, можно назвать как угодно  - это элемент цикла, число в нашем случае
// {
//     if (el > 0)
//     {
//         positiveSum = positiveSum + el; /// positiveSum += el
//     }
//     else
//     {
//         negativeSum += el;
//     }

// }
// ress[0] = positiveSum;       //формируем массив В return НЕЛЬЗЯ ЗАПИСАТЬ НЕСКОЛЬКО ЧИСЕЛ
// ress[1] = negativeSum;
// return ress;                  // Вернуть можно только масив из нескольких чисел

// }
// int[] array = GetArray(12, -9, 9);
// PrintArray(array);
// int[] ress = FindSum(array);
// Console.WriteLine();
// PrintArray(ress);
// Console.WriteLine();
// Console.WriteLine($"Сумма положительных чисел равна {ress[0]} Cумма отрицательных чисел равна {ress[1]}");


Метод int.TryParse (string s, out int result) //проверяет, можно ли получить число из строки.

//  Если это возможно - возвращает true и полученное число out -параметром, иначе возвращает false 
//  результатом и default (int) out -параметром.
// int Prompt (string msg)
// {
//     Console.Write(msg);
//     string value = Console.ReadLine();
//     if ((int.TryParse(value, out int val)) == false)
//     {
//         Console.WriteLine("Это не число ");
//     }
//     return val;
// }

